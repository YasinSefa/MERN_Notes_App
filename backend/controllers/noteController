const NoteModel = require('../models/noteModel')
const mongoose = require('mongoose')

const createNote = async (req, res) => {
    const { title, explanation } = req.body

    try {
        const note = await NoteModel.create({ title, explanation })
        res.status(200).json(note)
    } catch (error) {
        res.status(400).json({ error: error.message })
    }
}

const getNotes = async (req, res) => {
    const notes = await NoteModel.find()

    res.status(200).json(notes)
}

const getNoteById = async (req, res) => {
    const { id } = req.params

    if (!mongoose.Types.ObjectId.isValid(id)) {
        return res.status(404).json({ error: 'Id invalid' })
    }

    const note = await NoteModel.findById(id)

    if (!note) {
        return res.status(404).json({ error: 'Not found' })
    }

    res.status(200).json(note)
}

const deleteNoteById = async (req, res) => {
    const { id } = req.params

    if (!mongoose.Types.ObjectId.isValid(id)) {
        return res.status(404).json({ error: 'Id invalid' })
    }

    const note = await NoteModel.findOneAndDelete({ _id: id })

    if (!note) {
        return res.status(404).json({ error: 'Not found' })
    }

    res.status(200).json(note)
}

const editNoteById = async (req, res) => {
    const { id } = req.params

    if (!mongoose.Types.ObjectId.isValid(id)) {
        return res.status(404).json({ error: 'Id invalid' })
    }

    const note = await NoteModel.findOneAndUpdate({ _id: id }, {
        ...req.body
    }, { new: true })

    if (!note) {
        return res.status(404).json({ error: 'Not found' })
    }

    res.status(200).json(note)
}

module.exports = {
    createNote,
    getNotes,
    getNoteById,
    deleteNoteById,
    editNoteById
}